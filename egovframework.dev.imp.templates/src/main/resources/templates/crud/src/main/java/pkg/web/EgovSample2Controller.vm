##
#set($voPackage="${package}.service")
#set($voClassName="${entity.pcName}VO")
#set($voInstanceName="${entity.ccName}VO")
#set($servicePackage="${package}.service")
#set($serviceClassName="Egov${entity.pcName}Service")
#set($serviceName="${entity.ccName}Service")
#set($serviceInstanceName="${entity.ccName}Service")
#set($controllerPackage="${package}.web")
#set($controllerClassName="Egov${entity.pcName}Controller")
##
##
#set($listInstanceName="${entity.ccName}List")
#set($insertMethodName="insert${entity.pcName}")
#set($updateMethodName="update${entity.pcName}")
#set($deleteMethodName="delete${entity.pcName}")
#set($selectMethodName="select${entity.pcName}")
#set($selectListMethodName="select${entity.pcName}List")
#set($selectListTotCntMethodName="select${entity.pcName}ListTotCnt")
##
##
#set($updateViewMethodName="update${entity.pcName}View")
#set($addMethodName="add${entity.pcName}")
#set($addViewMethodName="add${entity.pcName}View")
##
#set($listPath="/${entity.ccName}/egov${entity.pcName}List.do")
#set($addViewPath="/${entity.ccName}/add${entity.pcName}View.do")
#set($addPath="/${entity.ccName}/add${entity.pcName}.do")
#set($selectPath="/${entity.ccName}/select${entity.pcName}.do")
#set($updatePath="/${entity.ccName}/update${entity.pcName}.do")
#set($updateViewPath="/${entity.ccName}/update${entity.pcName}View.do")
#set($deletePath="/${entity.ccName}/delete${entity.pcName}.do")
##
#set($listView="/${entity.ccName}/egov${entity.pcName}List")
#set($registerView="/${entity.ccName}/egov${entity.pcName}Register")
##
##
package ${controllerPackage};

import java.util.List;

import javax.annotation.Resource;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.SessionAttributes;
import org.springframework.web.bind.support.SessionStatus;

import egovframework.rte.cmmn.SampleDefaultVO;
import egovframework.rte.fdl.property.EgovPropertyService;
import org.egovframe.rte.psl.dataaccess.util.EgovMap;
import egovframework.rte.ptl.mvc.tags.ui.pagination.PaginationInfo;
import ${servicePackage}.${serviceClassName};
import ${voPackage}.${voClassName};

/**
 * @Class Name : ${controllerClassName}.java
 * @Description : ${entity.pcName} Controller class
 * @Modification Information
 * @
 * @  수정일         수정자                   수정내용
 * @ -------    --------    ---------------------------
 * @ ${createDate}    ${author}          최초 생성
 *
 *  @author 실행환경 개발팀 ${author}
 *  @since ${createDate}
 *  @version 1.0
 *  @see
 *  
 *  Copyright (C) 2009 by MOSPA  All right reserved.
 */

@Controller
@SessionAttributes(types=${voClassName}.class)
public class ${controllerClassName} {

    @Resource(name = "${serviceName}")
    private ${serviceClassName} ${serviceInstanceName};
    
    /** EgovPropertyService */
    @Resource(name = "propertiesService")
    protected EgovPropertyService propertiesService;
	
    /**
	 * ${entity.name} 목록을 조회한다. (pageing)
	 * @param searchVO - 조회할 정보가 담긴 SampleDefaultVO
	 * @return "${listView}"
	 * @exception Exception
	 */
    @RequestMapping(value="${listPath}")
    public String ${selectListMethodName}(@ModelAttribute("searchVO") SampleDefaultVO searchVO, 
    		ModelMap model)
            throws Exception {
    	
    	/** EgovPropertyService.sample */
    	searchVO.setPageUnit(propertiesService.getInt("pageUnit"));
    	searchVO.setPageSize(propertiesService.getInt("pageSize"));
    	
    	/** pageing */
    	PaginationInfo paginationInfo = new PaginationInfo();
		paginationInfo.setCurrentPageNo(searchVO.getPageIndex());
		paginationInfo.setRecordCountPerPage(searchVO.getPageUnit());
		paginationInfo.setPageSize(searchVO.getPageSize());
		
		searchVO.setFirstIndex(paginationInfo.getFirstRecordIndex());
		searchVO.setLastIndex(paginationInfo.getLastRecordIndex());
		searchVO.setRecordCountPerPage(paginationInfo.getRecordCountPerPage());
		
        List<EgovMap> ${listInstanceName} = ${serviceInstanceName}.${selectListMethodName}(searchVO);
        model.addAttribute("resultList", ${listInstanceName});
        
        int totCnt = ${serviceInstanceName}.${selectListTotCntMethodName}(searchVO);
		paginationInfo.setTotalRecordCount(totCnt);
        model.addAttribute("paginationInfo", paginationInfo);
        
        return "${listView}";
    } 
    
    @RequestMapping("${addViewPath}")
    public String ${addViewMethodName}(
            @ModelAttribute("searchVO") SampleDefaultVO searchVO, Model model)
            throws Exception {
        model.addAttribute("${voInstanceName}", new ${voClassName}());
        return "${registerView}";
    }
    
    @RequestMapping("${addPath}")
    public String ${addMethodName}(
            ${voClassName} ${voInstanceName},
            @ModelAttribute("searchVO") SampleDefaultVO searchVO, SessionStatus status)
            throws Exception {
        ${serviceInstanceName}.${insertMethodName}(${voInstanceName});
        status.setComplete();
        return "forward:${listPath}";
    }
    
    @RequestMapping("${updateViewPath}")
    public String ${updateViewMethodName}(
            @RequestParam("selectedId") String id ,
            @ModelAttribute("searchVO") SampleDefaultVO searchVO, Model model)
            throws Exception {
        ${voClassName} ${voInstanceName} = new ${voClassName}();
        ${voInstanceName}.setId(id);
        // 변수명은 CoC 에 따라 ${voInstanceName}
        model.addAttribute(${selectMethodName}(${voInstanceName}, searchVO));
        return "${registerView}";
    }

    @RequestMapping("${selectPath}")
    public @ModelAttribute("${voInstanceName}")
    ${voClassName} ${selectMethodName}(
            ${voClassName} ${voInstanceName},
            @ModelAttribute("searchVO") SampleDefaultVO searchVO) throws Exception {
        return ${serviceInstanceName}.${selectMethodName}(${voInstanceName});
    }

    @RequestMapping("${updatePath}")
    public String ${updateMethodName}(
            ${voClassName} ${voInstanceName},
            @ModelAttribute("searchVO") SampleDefaultVO searchVO, SessionStatus status)
            throws Exception {
        ${serviceInstanceName}.${updateMethodName}(${voInstanceName});
        status.setComplete();
        return "forward:${listPath}";
    }
    
    @RequestMapping("${deletePath}")
    public String ${deleteMethodName}(
            ${voClassName} ${voInstanceName},
            @ModelAttribute("searchVO") SampleDefaultVO searchVO, SessionStatus status)
            throws Exception {
        ${serviceInstanceName}.${deleteMethodName}(${voInstanceName});
        status.setComplete();
        return "forward:${listPath}";
    }

}
